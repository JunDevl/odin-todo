div#todo ul.container li {
  justify-content: center;
  align-items: center;
}

div.task {
  justify-content: center;
  align-items: center;
}

/*###   CUSTOM STYLING FOR CHECKBOX INTERACTION   ###*/

div.task > div.checkbox {
  --size: 1.6rem;
  --padding: .3rem;

  position: absolute;
  display: none;
  width: calc(var(--size) + (var(--padding) * 2));
  height: calc(var(--size) + (var(--padding) * 2));
  left: 1.5rem;
  top: calc(50% - ((var(--size) + (var(--padding) * 2)) / 2));
  padding: var(--padding);
  border-radius: 5px;
  box-sizing: border-box;
  transition: background-color 200ms;

  &:hover {
    background-color: oklch(from var(--base-border-color) calc(l + 0.1) c h / 20%);
  }

  & > input[type="checkbox"] { 
    display: none;
  }

  & > input[type="checkbox"] + label {
    display: flex;
    justify-content: center;
    align-items: center;
    width: 100%;
    height: 100%;

    & > svg {
      width: 100%;
      height: 100%;
      transition: all 150ms cubic-bezier(.4, .0, .23, 1);
      pointer-events: none;
    }

    &:active > svg {
      width: 90%;
      height: 90%;
    }

    & > svg > rect.border {
      transition: stroke 350ms;
      stroke: var(--base-border-color);
    }

    & > svg > path.mark {
      stroke-width: 14;
      fill: none;
      transition: all 350ms;
      transition-delay: 150ms cubic-bezier(.4, .0, .23, 1);
      stroke: var(--base-color-2);
      stroke-dasharray: 0, 1000;
    }

    & > svg > path.fill {
      stroke-width: 5;
      fill: var(--base-border-color);
      transition: all 350ms cubic-bezier(.4, .0, .23, 1);
      stroke: var(--base-border-color);
      stroke-linecap: round;
      stroke-linejoin: round;
    }
  }

  & > input[type="checkbox"]:checked + label > svg {
    animation: shrink-bounce 350ms cubic-bezier(.4, .0, .23, 1);

    & > rect.border {
      stroke: var(--accent-color);
    }

    & > path.mark {
      stroke-dasharray: 70, 1000;
    }

    & > path.fill {
      fill: var(--accent-color);
      stroke: var(--accent-color);
      animation: fill-shrink 350ms cubic-bezier(.4, .0, .23, 1);
      d: path("M 12, 12 l 76, 0 l 0, 76 l -76, 0 Z M 48, 48 l 4, 0 l 0, 4 l -4, 0 Z");
      fill-rule: nonzero;
    }
  }

}

li:has(div.task) {
  position: relative;
  z-index: 0;

  &:hover > div.task > :is(div.checkbox, div.options), div.checkbox:has(input[type="checkbox"]:checked) {
    display: inline-flex;
  }
}

@keyframes fill-shrink {
  from {
    d: path("M 12, 12 l 76, 0 l 0, 76 l -76, 0 Z M 12, 12 l 76, 0 l 0, 76 l -76, 0 Z");
    fill-rule: evenodd;
  }

  to {
    d: path("M 12, 12 l 76, 0 l 0, 76 l -76, 0 Z M 48, 48 l 4, 0 l 0, 4 l -4, 0 Z");
    fill-rule: evenodd;
  }
}

@keyframes shrink-bounce {
  0% {
    width: 100%;
    height: 100%;
  }

  33% {
    width: 85%;
    height: 85%;
  }

  100% {
    width: 100%;
    height: 100%;
  }
}

/*###  ###*/

div.task > div.options {
  --size: 1.6rem;
  --padding: .3rem;
  --gap-size: 1rem;
  --element-count: 2;

  position: absolute;
  display: none;
  gap: var(--gap-size);
  width: calc((var(--size) + var(--gap-size) + (var(--padding) * 2)) * var(--element-count));
  height: calc(var(--size) + var(--gap-size) + (var(--padding) * 2));
  right: 1.5rem;
  top: calc(50% - ((var(--size) + var(--gap-size) + (var(--padding) * 2)) / 2));
  padding: var(--padding);
  box-sizing: border-box;
  align-items: center;
  justify-content: space-between;

  & > button {
    transition: background-color 200ms;
    background-color: inherit;
    border: none;
    display: flex;
    justify-content: center;
    align-items: center;
    width: 100%;
    height: 100%;
    border-radius: 5px;

    &:hover {
      background-color: oklch(from var(--base-border-color) calc(l + 0.1) c   h / 20%);
    }

    & > svg {
      width: 100%;
      height: 100%;
      transition: all 150ms cubic-bezier(.4, .0, .23, 1);
      pointer-events: none;
    }

    &:active > svg {
      width: 90%;
      height: 90%;
    }
  }

  & > button.expand > svg * {
    stroke: var(--base-border-color);
  }

  & > button.delete > svg > * {
    transition-duration: 200ms;
  }

  & > button.delete > svg > *:not(path.fill) {
    fill: var(--semantic-error-color);
  }

  & > button.delete:hover > svg > path.inner {
    transition: 200ms fill; 
    fill: var(--base-color-2);
  }

  & > button.delete:hover > svg > path.fill {
    transition: 200ms; 
    fill: var(--semantic-error-color);
    stroke: var(--semantic-error-color);
  }
}